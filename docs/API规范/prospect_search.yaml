openapi: 3.0.1
info:
  title: Wiza API Documentation - Prospect search
  version: v1
components:
  securitySchemes:
    bearer_auth:
      type: http
      scheme: bearer
      description: Enter your bearer token (your API key) in the **Authorization**
        header in the format `Bearer {token}`
  schemas:
    ContactDetailsInput:
      type: object
      required:
      - full_name
      - company
      properties:
        full_name:
          type: string
          description: Full name of the contact. e.g. "Stephen Hakami".
          example: Stephen Hakami
        company:
          type: string
          description: Name of the company. e.g. "Wiza".
          example: Wiza
        domain:
          type: string
          description: Domain of the company. e.g. "wiza.co". This is optional.
          example: wiza.co
        profile_url:
          type: string
          description: URL of the Linkedin profile. e.g. "https://www.linkedin.com/in/stephen-hakami-5babb21b0/".
          example: https://www.linkedin.com/in/stephen-hakami-5babb21b0/
        email:
          type: string
          description: Email address of the contact.
          example: stephen@wiza.co
    LinkedinProfileInput:
      type: object
      required:
      - profile_url
      properties:
        profile_url:
          type: string
          description: URL of the Linkedin profile. e.g. "https://www.linkedin.com/in/stephen-hakami-5babb21b0/".
          example: https://www.linkedin.com/in/stephen-hakami-5babb21b0/
    EmailInput:
      type: object
      required:
      - email
      properties:
        email:
          type: string
          description: Email address of the contact.
          example: stephen@wiza.co
    Location:
      type: object
      properties:
        v:
          type: string
          description: name of the location
          example: Toronto, Ontario, Canada
        b:
          type: string
          description: type of location
          enum:
          - city
          - state
          - country
        s:
          type: string
          description: whether to include or exclude the location
          enum:
          - i
          - e
    ProspectSearchResponse:
      type: object
      properties:
        status:
          type: object
          properties:
            code: {}
        data:
          type: object
          properties:
            total: {}
    ListNotFoundResponse:
      type: object
      properties:
        status:
          type: integer
          example: 404
        message:
          type: string
          example: List not found
    ListResponse:
      type: object
      properties:
        status:
          type: object
          properties:
            code: {}
        type:
          type: string
          enum:
          - list
          example: list
        data:
          type: object
          properties:
            id: {}
    StartIndividualRevealResponse:
      type: object
      properties:
        status:
          type: object
          properties:
            code: {}
        type:
          type: string
          enum:
          - individual_reveal
          example: individual_reveal
        data:
          type: object
          properties:
            id: {}
    IndividualRevealResponse:
      type: object
      properties:
        status:
          type: object
          properties:
            code: {}
        type:
          type: string
          enum:
          - individual_reveal
          example: individual_reveal
        data:
          type: object
          properties:
            id: {}
    ContactsResponse:
      type: object
      properties:
        status:
          type: object
        data:
          type: array
    UnauthorizedErrorResponse:
      type: object
      properties:
        status:
          type: object
    CreditsResponse:
      type: object
      properties:
        credits:
          type: object
      example:
        credits:
          email_credits: unlimited
          api_credits: 100
paths:
  "/api/prospects/search":
    post:
      summary: Prospect search
      description: Find the number of prospects that match your search filters
      security:
      - bearer_auth: []
      parameters: []
      x-codeSamples:
      - lang: Javascript
        source: |
          const apiKey = "your api key here" // update with your api_key
      - lang: Python
        source: |
          import http.client
          print(data.decode("utf-8"))
      - lang: Ruby
        source: |+
          require "uri"
          puts response.read_body

      - lang: Curl
        source: "api_key=\"your api key here\" # update with your api_key\n\ncurl
          --location 'https://wiza.co/api/prospects/search' --header 'Content-Type:
          \"2010\",\n    \"year_founded_end\": \"2024\"\n  }\n}'\n"
      responses:
        '200':
          description: successful
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
      requestBody:
        content:
          application/json: {}
servers:
- url: https://wiza.co
  variables:
    defaultHost:
      default: wiza.co
